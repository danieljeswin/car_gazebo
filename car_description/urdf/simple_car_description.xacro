<?xml version="1.0"?>
<robot name="car" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>

  <material name="blue">
    <color rgba="0 0 1 1"/>
  </material>

  <material name="red">
    <color rgba="1 0 0 1"/>
  </material>

  <material name="green">
    <color rgba="0 1 0 1"/>
  </material>

  <link name="base_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
         <box size="0.0001 0.0001 0.0001"/>
      </geometry>
    </visual>
  </link>


  <xacro:property name="body_length" value="0.5"/>
  <xacro:property name="body_width" value="0.25"/>
  <xacro:property name="body_height" value="0.06"/>
  <xacro:property name="body_mass" value="7"/>
  <xacro:property name="x" value="0.24"/>
  <xacro:property name="y" value="0.12"/>
  <xacro:property name="wheel_radius" value="0.1"/>
  <xacro:property name="wheel_length" value="0.1"/>
  <xacro:property name="wheel_mass" value="2"/>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertia  ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
              iyy="${m*r*r/2}" iyz = "0"
              izz="${m*(3*r*r+h*h)/12}" />
  </xacro:macro>

  <xacro:macro name="box_inertia" params="x y z mass">
    <inertia ixx="${0.0833333 * mass * (y*y + z*z)}" ixy="0.0" ixz="0.0"
      iyy="${0.0833333 * mass * (x*x + z*z)}" iyz="0.0"
      izz="${0.0833333 * mass * (x*x + y*y)}" />
  </xacro:macro>

  <link name="body_link">
    <inertial>
      <mass value="${body_mass}"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <xacro:box_inertia mass="${body_mass}" x="${body_length}" y="${body_width}" z="${body_height}"/>
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${body_length} ${body_width} ${body_height}"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${body_length} ${body_width} ${body_height}"/>
      </geometry>
    </collision>
  </link>


  <joint name="base_to_body" type="fixed">
    <origin xyz="0 0 0.1" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="body_link"/>
  </joint>

  <link name="laser_link">
    <inertial>
      <mass value="1"/>
      <origin xyz="0 0 0"/>
      <xacro:cylinder_inertia  m="1" r="0.05" h="0.05" />
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.05"/>
      </geometry>
      <material name="green"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.05"/>
      </geometry>
    </collision>
  </link>

  <link name="imu_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder length="0.01" radius="0.01"/>
      </geometry>
      <material name="red"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder length="0.01" radius="0.01"/>
      </geometry>
    </collision>
  </link>

  <!-- <joint name="body_to_laser" type="continuous">
    <origin xyz="0.20 0 0.05" rpy="0 0 0"/>
    <axis xyz="0 0 1" rpy="0 0 0" />
    <parent link="body_link"/>
    <child link="laser_link"/>
  </joint> -->
  <joint name="body_to_laser" type="fixed">
    <origin xyz="0.1 0 0.15" rpy="0 0 0"/>
    <parent link="body_link"/>
    <child link="laser_link"/>
  </joint>

  <joint name="body_to_imu" type="fixed">
    <origin xyz="0 0 0.05" rpy="0 0 0"/>
    <parent link="body_link"/>
    <child link="imu_link"/>
  </joint>


  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>

  <gazebo reference="body_link">
    <material>Gazebo/Blue</material>
  </gazebo>

  <gazebo>
    <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
        <updateRate>100.0</updateRate>
        <robotNamespace>/</robotNamespace>
        <leftFrontJoint>body_to_left_front</leftFrontJoint>
        <rightFrontJoint>body_to_right_front</rightFrontJoint>
        <leftRearJoint>body_to_left_rear</leftRearJoint>
        <rightRearJoint>body_to_right_rear</rightRearJoint>
        <wheelSeparation>0.3</wheelSeparation>
        <wheelDiameter>0.2</wheelDiameter>
        <robotBaseFrame>base_link</robotBaseFrame>
        <torque>30</torque>
        <topicName>cmd_vel</topicName>
        <broadcastTF>true</broadcastTF>
    </plugin>
  </gazebo>

  <gazebo reference="laser_link">
    <material>Gazebo/Green</material>
    <sensor type="gpu_ray" name="laser_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>10.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_lasers_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/laser/scan</topicName>
        <frameName>laser_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="imu_link">
    <turnGravityOff>false</turnGravityOff>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>imu</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>imu</topicName>
        <bodyName>imu_link</bodyName>
        <updateRateHZ>10.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>imu_link</frameName>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>






  <xacro:macro name="wheel" params="prefix x y">
    <link name="${prefix}_wheel">
      <inertial>
        <mass value="${wheel_mass}"/>
        <origin xyz="0 0 0"/>
        <xacro:cylinder_inertia  m="${wheel_mass}" r="${wheel_radius}" h="${wheel_length}" />
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="1.5707 0 0"/>
        <geometry>
          <cylinder length="${wheel_length}" radius="${wheel_radius}"/>
        </geometry>
        <material name="black"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="1.5707 0 0"/>
        <geometry>
          <cylinder length="${wheel_length}" radius="${wheel_radius}"/>
        </geometry>
      </collision>
    </link>

    <joint name="body_to_${prefix}" type="continuous">
      <origin xyz="${x} ${y} 0" rpy="0 0 0"/>
      <axis xyz="0 1 0" rpy="0 0 0" />
      <parent link="body_link"/>
      <child link="${prefix}_wheel"/>
    </joint>

    <!-- <transmission name="${prefix}">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="body_to_${prefix}">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
      <actuator name="body_to_${prefix}_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission> -->

    <gazebo reference="${prefix}_wheel">
      <mu1 value="7.0"/>
      <mu2 value="7.0"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <fdir1 value="1 0 0"/>
      <turnGravityOff>false</turnGravityOff>
      <material>Gazebo/Black</material>
    </gazebo>


  </xacro:macro>



  <xacro:wheel prefix="left_front" x="${x}" y="${y}"/>
  <xacro:wheel prefix="right_front" x="${x}" y="-${y}"/>
  <xacro:wheel prefix="left_rear" x="-${x}" y="${y}"/>
  <xacro:wheel prefix="right_rear" x="-${x}" y="-${y}"/>
</robot>